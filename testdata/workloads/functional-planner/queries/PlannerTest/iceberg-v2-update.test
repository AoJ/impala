UPDATE iceberg_v2_no_deletes set s = concat(s,s) where i = 3
---- PLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_no_deletes, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_no_deletes-POSITION-DELETE]
|
01:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=36B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_no_deletes]
   HDFS partitions=1/1 files=1 size=625B
   predicates: i = 3
   row-size=36B cardinality=1
---- DISTRIBUTEDPLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_no_deletes, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_no_deletes-POSITION-DELETE]
|
01:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=36B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_no_deletes]
   HDFS partitions=1/1 files=1 size=625B
   predicates: i = 3
   row-size=36B cardinality=1
====
UPDATE iceberg_v2_delete_positional SET `data` = concat(`data`,'a') where id = 15
---- PLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_delete_positional, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE]
|
03:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=40B cardinality=1
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN]
|  row-size=40B cardinality=1
|
|--01:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE-01 functional_parquet.iceberg_v2_delete_positional-position-delete]
|     HDFS partitions=1/1 files=1 size=1.54KB
|     row-size=182B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional]
   HDFS partitions=1/1 files=1 size=662B
   predicates: id = 15
   row-size=40B cardinality=1
---- DISTRIBUTEDPLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_delete_positional, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE]
|
04:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=40B cardinality=1
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN, DIRECTED]
|  row-size=40B cardinality=1
|
|--03:EXCHANGE [DIRECTED]
|  |
|  01:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE-01 functional_parquet.iceberg_v2_delete_positional-position-delete]
|     HDFS partitions=1/1 files=1 size=1.54KB
|     row-size=182B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional]
   HDFS partitions=1/1 files=1 size=662B
   predicates: id = 15
   row-size=40B cardinality=1
====
UPDATE iceberg_v2_delete_positional SET id = cast(id+1 as int)
---- PLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_delete_positional, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE]
|
03:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=40B cardinality=2
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN]
|  row-size=40B cardinality=2
|
|--01:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE-01 functional_parquet.iceberg_v2_delete_positional-position-delete]
|     HDFS partitions=1/1 files=1 size=1.54KB
|     row-size=182B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional]
   HDFS partitions=1/1 files=1 size=662B
   row-size=40B cardinality=3
---- DISTRIBUTEDPLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_delete_positional, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE]
|
04:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=40B cardinality=2
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN, DIRECTED]
|  row-size=40B cardinality=2
|
|--03:EXCHANGE [DIRECTED]
|  |
|  01:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE-01 functional_parquet.iceberg_v2_delete_positional-position-delete]
|     HDFS partitions=1/1 files=1 size=1.54KB
|     row-size=182B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional]
   HDFS partitions=1/1 files=1 size=662B
   row-size=40B cardinality=3
====
UPDATE iceberg_v2_delete_positional SET id = 42 WHERE FILE__POSITION = id
---- PLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_delete_positional, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE]
|
03:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=32B cardinality=1
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN]
|  row-size=40B cardinality=1
|
|--01:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE-01 functional_parquet.iceberg_v2_delete_positional-position-delete]
|     HDFS partitions=1/1 files=1 size=1.54KB
|     row-size=182B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional]
   HDFS partitions=1/1 files=1 size=662B
   predicates: FILE__POSITION = id
   row-size=40B cardinality=1
---- DISTRIBUTEDPLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_delete_positional, OVERWRITE=false]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE]
|
04:SORT
|  order by: input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=32B cardinality=1
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN, DIRECTED]
|  row-size=40B cardinality=1
|
|--03:EXCHANGE [DIRECTED]
|  |
|  01:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional-POSITION-DELETE-01 functional_parquet.iceberg_v2_delete_positional-position-delete]
|     HDFS partitions=1/1 files=1 size=1.54KB
|     row-size=182B cardinality=1
|
00:SCAN HDFS [functional_parquet.iceberg_v2_delete_positional]
   HDFS partitions=1/1 files=1 size=662B
   predicates: FILE__POSITION = id
   row-size=40B cardinality=1
====
UPDATE iceberg_v2_partitioned_position_deletes set id = length(action)
---- PLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes, OVERWRITE=false, PARTITION-KEYS=(action)]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE]
|
03:SORT
|  order by: partition__spec__id ASC NULLS LAST, iceberg__partition__serialized ASC NULLS LAST, input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=76B cardinality=10
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN]
|  row-size=76B cardinality=10
|
|--01:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE-01 functional_parquet.iceberg_v2_partitioned_position_deletes-position-delete]
|     HDFS partitions=1/1 files=3 size=9.47KB
|     row-size=204B cardinality=10
|
00:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes]
   HDFS partitions=1/1 files=3 size=3.48KB
   row-size=76B cardinality=20
---- DISTRIBUTEDPLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes, OVERWRITE=false, PARTITION-KEYS=(action)]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE]
|
05:SORT
|  order by: partition__spec__id ASC NULLS LAST, iceberg__partition__serialized ASC NULLS LAST, input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=76B cardinality=10
|
04:EXCHANGE [HASH(functional_parquet.iceberg_v2_partitioned_position_deletes.PARTITION__SPEC__ID,functional_parquet.iceberg_v2_partitioned_position_deletes.ICEBERG__PARTITION__SERIALIZED)]
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN, DIRECTED]
|  row-size=76B cardinality=10
|
|--03:EXCHANGE [DIRECTED]
|  |
|  01:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE-01 functional_parquet.iceberg_v2_partitioned_position_deletes-position-delete]
|     HDFS partitions=1/1 files=3 size=9.47KB
|     row-size=204B cardinality=10
|
00:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes]
   HDFS partitions=1/1 files=3 size=3.48KB
   row-size=76B cardinality=20
====
UPDATE iceberg_v2_partitioned_position_deletes set id = length(action) where action = 'click'
---- PLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes, OVERWRITE=false, PARTITION-KEYS=(action)]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE]
|
03:SORT
|  order by: partition__spec__id ASC NULLS LAST, iceberg__partition__serialized ASC NULLS LAST, input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=76B cardinality=3
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN]
|  row-size=76B cardinality=3
|
|--01:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE-01 functional_parquet.iceberg_v2_partitioned_position_deletes-position-delete]
|     HDFS partitions=1/1 files=1 size=3.15KB
|     row-size=204B cardinality=3
|
00:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes]
   HDFS partitions=1/1 files=1 size=1.15KB
   skipped Iceberg predicates: action = 'click'
   row-size=76B cardinality=6
---- DISTRIBUTEDPLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes, OVERWRITE=false, PARTITION-KEYS=(action)]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE]
|
04:SORT
|  order by: partition__spec__id ASC NULLS LAST, iceberg__partition__serialized ASC NULLS LAST, input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=76B cardinality=3
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN, DIRECTED]
|  row-size=76B cardinality=3
|
|--03:EXCHANGE [DIRECTED]
|  |
|  01:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE-01 functional_parquet.iceberg_v2_partitioned_position_deletes-position-delete]
|     HDFS partitions=1/1 files=1 size=3.15KB
|     row-size=204B cardinality=3
|
00:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes]
   HDFS partitions=1/1 files=1 size=1.15KB
   skipped Iceberg predicates: action = 'click'
   row-size=76B cardinality=6
====
UPDATE target set user = s from iceberg_v2_partitioned_position_deletes target, iceberg_v2_positional_update_all_rows source where target.id = source.i
---- PLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes, OVERWRITE=false, PARTITION-KEYS=(action)]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE]
|
09:SORT
|  order by: partition__spec__id ASC NULLS LAST, iceberg__partition__serialized ASC NULLS LAST, input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=80B cardinality=10
|
08:HASH JOIN [INNER JOIN]
|  hash predicates: target.id = source.i
|  runtime filters: RF000 <- source.i
|  row-size=104B cardinality=10
|
|--07:UNION
|  |  pass-through-operands: all
|  |  row-size=36B cardinality=4
|  |
|  |--05:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN]
|  |  |  row-size=36B cardinality=1
|  |  |
|  |  |--04:SCAN HDFS [functional_parquet.iceberg_v2_positional_update_all_rows-POSITION-DELETE-04 source-position-delete]
|  |  |     HDFS partitions=1/1 files=1 size=2.60KB
|  |  |     row-size=246B cardinality=3
|  |  |
|  |  03:SCAN HDFS [functional_parquet.iceberg_v2_positional_update_all_rows source]
|  |     HDFS partitions=1/1 files=1 size=625B
|  |     row-size=36B cardinality=3
|  |
|  06:SCAN HDFS [functional_parquet.iceberg_v2_positional_update_all_rows source]
|     HDFS partitions=1/1 files=1 size=625B
|     row-size=36B cardinality=3
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN]
|  row-size=68B cardinality=10
|
|--01:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE-01 target-position-delete]
|     HDFS partitions=1/1 files=3 size=9.47KB
|     row-size=204B cardinality=10
|
00:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes target]
   HDFS partitions=1/1 files=3 size=3.48KB
   runtime filters: RF000 -> target.id
   row-size=68B cardinality=20
---- DISTRIBUTEDPLAN
MULTI DATA SINK
|->WRITE TO HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes, OVERWRITE=false, PARTITION-KEYS=(action)]
|->DELETE FROM ICEBERG [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE]
|
13:SORT
|  order by: partition__spec__id ASC NULLS LAST, iceberg__partition__serialized ASC NULLS LAST, input__file__name ASC NULLS LAST, file__position ASC NULLS LAST
|  row-size=80B cardinality=10
|
12:EXCHANGE [HASH(target.PARTITION__SPEC__ID,target.ICEBERG__PARTITION__SERIALIZED)]
|
08:HASH JOIN [INNER JOIN, BROADCAST]
|  hash predicates: target.id = source.i
|  runtime filters: RF000 <- source.i
|  row-size=104B cardinality=10
|
|--11:EXCHANGE [BROADCAST]
|  |
|  07:UNION
|  |  pass-through-operands: all
|  |  row-size=36B cardinality=4
|  |
|  |--05:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN, DIRECTED]
|  |  |  row-size=36B cardinality=1
|  |  |
|  |  |--10:EXCHANGE [DIRECTED]
|  |  |  |
|  |  |  04:SCAN HDFS [functional_parquet.iceberg_v2_positional_update_all_rows-POSITION-DELETE-04 source-position-delete]
|  |  |     HDFS partitions=1/1 files=1 size=2.60KB
|  |  |     row-size=246B cardinality=3
|  |  |
|  |  03:SCAN HDFS [functional_parquet.iceberg_v2_positional_update_all_rows source]
|  |     HDFS partitions=1/1 files=1 size=625B
|  |     row-size=36B cardinality=3
|  |
|  06:SCAN HDFS [functional_parquet.iceberg_v2_positional_update_all_rows source]
|     HDFS partitions=1/1 files=1 size=625B
|     row-size=36B cardinality=3
|
02:DELETE EVENTS ICEBERG DELETE [ICEBERG DELETE JOIN, DIRECTED]
|  row-size=68B cardinality=10
|
|--09:EXCHANGE [DIRECTED]
|  |
|  01:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes-POSITION-DELETE-01 target-position-delete]
|     HDFS partitions=1/1 files=3 size=9.47KB
|     row-size=204B cardinality=10
|
00:SCAN HDFS [functional_parquet.iceberg_v2_partitioned_position_deletes target]
   HDFS partitions=1/1 files=3 size=3.48KB
   runtime filters: RF000 -> target.id
   row-size=68B cardinality=20
====
